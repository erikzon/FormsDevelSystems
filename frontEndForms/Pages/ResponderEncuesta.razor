@page "/encuesta/{Id}"
@using frontEndForms.Modelos
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject DialogService DialogService
@inject DialogService DialogService
@using System.Text.Json;

<PageTitle>Encuestas</PageTitle>
@if (encuesta is not null)
{
    <h2>@encuesta.Nombre</h2>
    <p>@encuesta.Descripcion</p>
}
@if (campos is not null)
{
    <RadzenTemplateForm TItem="Respuesta">
        @foreach (var campo in campos)
        {
            @if (campo.Requerido)
            {
                <RadzenText TextStyle="TextStyle.Caption">*requerido</RadzenText>
            }
            if (campo.TipoCampo == "texto")
            {
                <RadzenTextBox @bind-Value="respuestas[campo.IdCampo].Valor" Name="@campo.IdCampo.ToString()" Style="width:100%; margin-bottom:10px" Placeholder="@campo.Titulo" />
            }
            else if (campo.TipoCampo == "numero")
            {
                <RadzenNumeric @bind-Value="respuestas[campo.IdCampo].Valor" Name="@campo.IdCampo.ToString()" Style="width:100%; margin-bottom:10px" Placeholder="@campo.Titulo"  />
            }
            else if (campo.TipoCampo == "fecha")
            {
                <RadzenDatePicker TValue="DateTime" @bind-Value="respuestas[campo.IdCampo].ValorFecha" DateFormat="dd/MM/yyyy" Name="@campo.IdCampo.ToString()" Style="width:100%; margin-bottom:10px" Placeholder="@campo.Titulo" />
            }
        }

    </RadzenTemplateForm> 
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Medium" Icon="save" Text="Enviar respuestas" Click="@Guardar" /> 
    </RadzenStack>
}
else
{
    <RadzenProgressBarCircular Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
}



@code {
    [Parameter]
    public string Id { get; set; }
    public Dictionary<int, Respuesta> respuestas = new Dictionary<int, Respuesta>();

    public Encuesta encuesta;
    public Campo[]? campos;
    protected override async Task OnInitializedAsync()
    {
        encuesta = await Http.GetFromJsonAsync<Encuesta>($"http://localhost:5029/api/Encuestas/{Id}");
        campos = await Http.GetFromJsonAsync<Campo[]>($"http://localhost:5029/api/Campos/{Id}");

        foreach (var campo in campos)
        {
            Respuesta enlazarRespuesta = new Respuesta();
            enlazarRespuesta.IdCampo = campo.IdCampo;
            enlazarRespuesta.Campo = campo;
            respuestas[campo.IdCampo] = enlazarRespuesta;
        }
    }

    async Task Guardar()
    {
        foreach (var item in respuestas)
        {
            Respuesta respuesta = item.Value;
            if (respuesta.Valor is null && campos.Where(c => c.IdCampo == respuesta.IdCampo && c.Requerido == true).Select(c => c.Requerido).Any())
            {
                await DialogService.OpenAsync("Alerta", ds =>
                    @<RadzenStack Gap="1.5rem">
                        <p>❌ Hay campos obligatorios que se encuentran vacios.</p>
                    </RadzenStack>);
                return;
            }
            //var jsonrepuesta = JsonSerializer.Serialize(respuesta);
            var response = await Http.PostAsJsonAsync("http://localhost:5029/api/Respuestas", respuesta);
        }
        foreach (var campo in campos)
        {
            Respuesta enlazarRespuesta = new Respuesta();
            enlazarRespuesta.IdCampo = campo.IdCampo;
            enlazarRespuesta.Campo = campo;
            respuestas[campo.IdCampo] = enlazarRespuesta;
        }
        var result = await DialogService.OpenAsync("Gracias", ds =>
            @<RadzenStack Gap="1.5rem">
                <p>✅ Respuestas registradas, puedes abandonar el sitio.</p>
            </RadzenStack>);
    }

    // async Task Guardar()
    // {
    //     foreach (var item in respuestas)
    //     {
    //         var respuesta = item.Value;
    //         var response = await Http.PostAsJsonAsync("http://localhost:5029/api/Respuestas", respuesta);
    //     }
    // }

}
