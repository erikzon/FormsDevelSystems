@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation


<div class="top-row px-4 m-2">
    @if (@existeSesion)
    {
        <RadzenButton Click="@CerrarSesionMetodo" Text="Cerrar Sesion" ButtonStyle="ButtonStyle.Danger" />
    }
</div>


@code {
    private bool existeSesion = false;

    protected override async Task OnInitializedAsync()
    {
        Navigation.LocationChanged += HandleLocationChanged;
        await VerificarToken();
    }

    private async Task VerificarToken()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "access_token");
        existeSesion = !string.IsNullOrEmpty(token);
    }

    private async void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        await VerificarToken();
    }

    async Task CerrarSesionMetodo()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "access_token");
        Navigation.NavigateTo("/");
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= HandleLocationChanged;
    }
}
